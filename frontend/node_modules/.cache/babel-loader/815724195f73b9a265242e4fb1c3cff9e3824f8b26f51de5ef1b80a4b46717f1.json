{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjamily\\\\Documents\\\\percobaan satu\\\\frontend\\\\src\\\\ClockInOut.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockInOut = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [status, setStatus] = useState('out');\n  const [error, setError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const staffId = user.staffId || null;\n  const fetchRecords = async id => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/records/${id}`);\n      const today = new Date().toISOString().slice(0, 10);\n      const todaysRecords = response.data.filter(r => r.timestamp.startsWith(today));\n      setRecords(todaysRecords);\n      if (todaysRecords.length > 0) {\n        setStatus(todaysRecords[todaysRecords.length - 1].type === 'clock-in' ? 'in' : 'out');\n      } else {\n        setStatus('out'); // Reset status if no records for today\n      }\n    } catch (error) {\n      console.error('Error fetching records:', error);\n      setStatus('out'); // Reset status on error\n    }\n  };\n  useEffect(() => {\n    if (staffId !== null) {\n      fetchRecords(staffId);\n    }\n  }, [staffId]);\n  const handleClockIn = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/records', {\n        staffId,\n        type: 'clock-in'\n      });\n      fetchRecords();\n      setError('');\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const handleClockOut = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/records', {\n        staffId,\n        type: 'clock-out'\n      });\n      fetchRecords();\n      setError('');\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Clock In/Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: Anda sedang \", status === 'in' ? 'bekerja' : 'tidak bekerja']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClockIn,\n      disabled: status === 'in',\n      children: \"Clock In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClockOut,\n      disabled: status === 'out',\n      children: \"Clock Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Today's Activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: records.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [record.type, \" at \", new Date(record.timestamp).toLocaleTimeString()]\n      }, record.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockInOut, \"mO2mZ/YxLR82YJOzRA86QcpHAc8=\");\n_c = ClockInOut;\nexport default ClockInOut;\nvar _c;\n$RefreshReg$(_c, \"ClockInOut\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ClockInOut","_s","records","setRecords","status","setStatus","error","setError","user","JSON","parse","localStorage","getItem","staffId","fetchRecords","id","response","get","today","Date","toISOString","slice","todaysRecords","data","filter","r","timestamp","startsWith","length","type","console","handleClockIn","post","message","handleClockOut","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","disabled","map","record","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/mjamily/Documents/percobaan satu/frontend/src/ClockInOut.tsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ClockInOut = () => {\n  const [records, setRecords] = useState([]);\n  const [status, setStatus] = useState('out');\n  const [error, setError] = useState('');\n\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const staffId = user.staffId || null;\n\n  const fetchRecords = async (id: number) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/records/${id}`);\n      const today = new Date().toISOString().slice(0, 10);\n      const todaysRecords = response.data.filter((r: any) => r.timestamp.startsWith(today));\n      setRecords(todaysRecords);\n\n      if (todaysRecords.length > 0) {\n        setStatus(todaysRecords[todaysRecords.length - 1].type === 'clock-in' ? 'in' : 'out');\n      } else {\n        setStatus('out'); // Reset status if no records for today\n      }\n    } catch (error) {\n      console.error('Error fetching records:', error);\n      setStatus('out'); // Reset status on error\n    }\n  };\n\n  useEffect(() => {\n    if (staffId !== null) {\n      fetchRecords(staffId);\n    }\n  }, [staffId]);\n\n  const handleClockIn = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/records', { staffId, type: 'clock-in' });\n      fetchRecords();\n      setError('');\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n\n  const handleClockOut = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/records', { staffId, type: 'clock-out' });\n      fetchRecords();\n      setError('');\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Clock In/Out</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <p>Status: Anda sedang {status === 'in' ? 'bekerja' : 'tidak bekerja'}</p>\n      <button onClick={handleClockIn} disabled={status === 'in'}>Clock In</button>\n      <button onClick={handleClockOut} disabled={status === 'out'}>Clock Out</button>\n      <h3>Today's Activity</h3>\n      <ul>\n        {records.map(record => (\n          <li key={record.id}>\n            {record.type} at {new Date(record.timestamp).toLocaleTimeString()}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ClockInOut;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}