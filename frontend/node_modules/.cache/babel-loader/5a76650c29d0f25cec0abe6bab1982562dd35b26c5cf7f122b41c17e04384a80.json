{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjamily\\\\Documents\\\\percobaan satu\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport LoginPage from './LoginPage';\nimport AdminDashboard from './AdminDashboard';\nimport AuthRedirect from './AuthRedirect';\n\n// Define the office location (latitude and longitude)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OFFICE_LOCATION = {\n  latitude: -6.958115592601739,\n  // Replace with your office's latitude\n  longitude: 107.70755749004297 // Replace with your office's longitude\n};\nconst GEOFENCE_RADIUS = 50; // in meters\n\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const handleLogin = loggedInUser => {\n    setUser(loggedInUser);\n  };\n  const handleLogout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(AuthRedirect, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: user && user.role === 'staff' ? /*#__PURE__*/_jsxDEV(MainApp, {\n          user: user,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 66\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: user && user.role === 'admin' ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 71\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nconst MainApp = ({\n  user,\n  onLogout\n}) => {\n  _s2();\n  const [staff, setStaff] = useState([]);\n  const [attendance, setAttendance] = useState([]);\n  const [error, setError] = useState(null);\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/staff').then(response => setStaff(response.data));\n    axios.get('http://localhost:5000/api/attendance').then(response => setAttendance(response.data));\n  }, []);\n  const handleAttendance = (staffId, name, status) => {\n    const date = new Date().toISOString().split('T')[0];\n    if (status === 'Hadir') {\n      if (!navigator.geolocation) {\n        setError('Geolocation is not supported by your browser');\n        return;\n      }\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const distance = getDistance(latitude, longitude, OFFICE_LOCATION.latitude, OFFICE_LOCATION.longitude);\n        if (distance <= GEOFENCE_RADIUS) {\n          submitAttendance(staffId, name, status, date);\n        } else {\n          setError('You are not within the office radius to mark attendance.');\n        }\n      }, () => {\n        setError('Unable to retrieve your location.');\n      });\n    } else {\n      submitAttendance(staffId, name, status, date);\n    }\n  };\n  const submitAttendance = (staffId, name, status, date) => {\n    axios.post('http://localhost:5000/api/attendance', {\n      staffId,\n      name,\n      status,\n      date\n    }).then(response => {\n      setAttendance([...attendance, response.data]);\n      setError(null);\n    }).catch(err => {\n      if (err.response && err.response.status === 400) {\n        setError(err.response.data.message);\n      } else {\n        setError('An error occurred while submitting attendance.');\n      }\n    });\n  };\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // metres\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // in metres\n  };\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n  const sortedAttendance = [...attendance].filter(a => user.role === 'admin' || user.role === 'staff' && a.staffId === user.staffId).sort((a, b) => {\n    if (sortColumn === null) return 0;\n    const aValue = a[sortColumn];\n    const bValue = b[sortColumn];\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return sortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n    } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger mb-4\",\n      onClick: onLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Aplikasi Absensi Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: staff.filter(s => user.role === 'admin' || user.role === 'staff' && s.id === user.staffId).map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: s.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success me-2\",\n              onClick: () => handleAttendance(s.id, s.name, 'Hadir'),\n              children: \"Hadir\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning me-2\",\n              onClick: () => handleAttendance(s.id, s.name, 'Sakit'),\n              children: \"Sakit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              onClick: () => handleAttendance(s.id, s.name, 'Izin'),\n              children: \"Izin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)\n      }, s.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Riwayat Absensi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Nama \", sortColumn === 'name' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Status \", sortColumn === 'status' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('date'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Tanggal \", sortColumn === 'date' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedAttendance.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, a.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s2(MainApp, \"BiEii1z21ub0NFlD0XiJVlvx97I=\");\n_c2 = MainApp;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MainApp\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","axios","LoginPage","AdminDashboard","AuthRedirect","jsxDEV","_jsxDEV","OFFICE_LOCATION","latitude","longitude","GEOFENCE_RADIUS","App","_s","user","setUser","handleLogin","loggedInUser","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","role","MainApp","onLogout","_c","_s2","staff","setStaff","attendance","setAttendance","error","setError","sortColumn","setSortColumn","sortDirection","setSortDirection","get","then","response","data","handleAttendance","staffId","name","status","date","Date","toISOString","split","navigator","geolocation","getCurrentPosition","position","coords","distance","getDistance","submitAttendance","post","catch","err","message","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","handleSort","column","sortedAttendance","filter","sort","b","aValue","bValue","localeCompare","className","onClick","s","id","map","style","cursor","_c2","$RefreshReg$"],"sources":["C:/Users/mjamily/Documents/percobaan satu/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport LoginPage from './LoginPage';\nimport AdminDashboard from './AdminDashboard';\nimport AuthRedirect from './AuthRedirect';\n\n// Define the office location (latitude and longitude)\nconst OFFICE_LOCATION = {\n  latitude: -6.958115592601739, // Replace with your office's latitude\n  longitude: 107.70755749004297, // Replace with your office's longitude\n};\nconst GEOFENCE_RADIUS = 50; // in meters\n\ninterface Staff {\n  id: number;\n  name: string;\n}\n\ninterface Attendance {\n  id: number;\n  staffId: number;\n  name: string;\n  status: string;\n  date: string;\n}\n\ninterface User {\n  id: number;\n  username: string;\n  role: 'admin' | 'staff';\n  staffId?: number;\n}\n\nfunction App() {\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleLogin = (loggedInUser: User) => {\n    setUser(loggedInUser);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n  };\n\n  return (\n    <Router>\n      <AuthRedirect user={user} />\n      <Routes>\n        <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n        <Route path=\"/\" element={user && user.role === 'staff' ? <MainApp user={user} onLogout={handleLogout} /> : null} />\n        <Route path=\"/admin\" element={user && user.role === 'admin' ? <AdminDashboard /> : null} />\n      </Routes>\n    </Router>\n  );\n}\n\ninterface MainAppProps {\n  user: User;\n  onLogout: () => void;\n}\n\nconst MainApp: React.FC<MainAppProps> = ({ user, onLogout }) => {\n  const [staff, setStaff] = useState<Staff[]>([]);\n  const [attendance, setAttendance] = useState<Attendance[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [sortColumn, setSortColumn] = useState<keyof Attendance | null>(null);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/staff').then((response) => setStaff(response.data));\n    axios.get('http://localhost:5000/api/attendance').then((response) => setAttendance(response.data));\n  }, []);\n\n  const handleAttendance = (staffId: number, name: string, status: string) => {\n    const date = new Date().toISOString().split('T')[0];\n\n    if (status === 'Hadir') {\n      if (!navigator.geolocation) {\n        setError('Geolocation is not supported by your browser');\n        return;\n      }\n\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          const distance = getDistance(latitude, longitude, OFFICE_LOCATION.latitude, OFFICE_LOCATION.longitude);\n\n          if (distance <= GEOFENCE_RADIUS) {\n            submitAttendance(staffId, name, status, date);\n          } else {\n            setError('You are not within the office radius to mark attendance.');\n          }\n        },\n        () => {\n          setError('Unable to retrieve your location.');\n        }\n      );\n    } else {\n      submitAttendance(staffId, name, status, date);\n    }\n  };\n\n  const submitAttendance = (staffId: number, name: string, status: string, date: string) => {\n    axios.post('http://localhost:5000/api/attendance', { staffId, name, status, date })\n      .then((response) => {\n        setAttendance([...attendance, response.data]);\n        setError(null);\n      })\n      .catch((err) => {\n        if (err.response && err.response.status === 400) {\n          setError(err.response.data.message);\n        } else {\n          setError('An error occurred while submitting attendance.');\n        }\n      });\n  };\n\n  const getDistance = (lat1: number, lon1: number, lat2: number, lon2: number) => {\n    const R = 6371e3; // metres\n    const φ1 = (lat1 * Math.PI) / 180; // φ, λ in radians\n    const φ2 = (lat2 * Math.PI) / 180;\n    const Δφ = ((lat2 - lat1) * Math.PI) / 180;\n    const Δλ = ((lon2 - lon1) * Math.PI) / 180;\n\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    return R * c; // in metres\n  };\n\n  const handleSort = (column: keyof Attendance) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n\n  const sortedAttendance = [...attendance]\n    .filter((a) => user.role === 'admin' || (user.role === 'staff' && a.staffId === user.staffId))\n    .sort((a, b) => {\n      if (sortColumn === null) return 0;\n\n      const aValue = a[sortColumn];\n      const bValue = b[sortColumn];\n\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\n        return sortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n      } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n        return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n      return 0;\n    });\n\n  return (\n    <div className=\"container mt-5\">\n      <button className=\"btn btn-danger mb-4\" onClick={onLogout}>Logout</button>\n      <h1 className=\"mb-4\">Aplikasi Absensi Staff</h1>\n\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n\n      <div className=\"row\">\n        {staff\n          .filter((s) => user.role === 'admin' || (user.role === 'staff' && s.id === user.staffId))\n          .map((s) => (\n            <div key={s.id} className=\"col-md-4 mb-4\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{s.name}</h5>\n                  <button className=\"btn btn-success me-2\" onClick={() => handleAttendance(s.id, s.name, 'Hadir')}>\n                    Hadir\n                  </button>\n                  <button className=\"btn btn-warning me-2\" onClick={() => handleAttendance(s.id, s.name, 'Sakit')}>\n                    Sakit\n                  </button>\n                  <button className=\"btn btn-info\" onClick={() => handleAttendance(s.id, s.name, 'Izin')}>\n                    Izin\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n\n      <h2 className=\"mt-5\">Riwayat Absensi</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('name')} style={{ cursor: 'pointer' }}>\n              Nama {sortColumn === 'name' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n            <th onClick={() => handleSort('status')} style={{ cursor: 'pointer' }}>\n              Status {sortColumn === 'status' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n            <th onClick={() => handleSort('date')} style={{ cursor: 'pointer' }}>\n              Tanggal {sortColumn === 'date' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedAttendance.map((a) => (\n            <tr key={a.id}>\n              <td>{a.name}</td>\n              <td>{a.status}</td>\n              <td>{a.date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}