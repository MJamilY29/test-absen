{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import'./App.css';import LoginPage from'./LoginPage';import AdminDashboard from'./AdminDashboard';import AuthRedirect from'./AuthRedirect';import MainApp from'./MainApp';// Import MainApp\nimport Layout from'./Layout';// Import Layout\n// Keep User interface as it is used in App.tsx\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(()=>{const savedUser=localStorage.getItem('user');return savedUser?JSON.parse(savedUser):null;});const handleLogin=loggedInUser=>{localStorage.setItem('user',JSON.stringify(loggedInUser));setUser(loggedInUser);};const handleLogout=()=>{localStorage.removeItem('user');setUser(null);};const renderMainApp=()=>{if(user&&user.role==='staff'){return/*#__PURE__*/_jsx(MainApp,{user:user,onLogout:handleLogout});}return null;};const renderAdminDashboard=()=>{if(user&&user.role==='admin'){return/*#__PURE__*/_jsx(AdminDashboard,{onLogout:handleLogout});}return null;};return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(AuthRedirect,{user:user}),/*#__PURE__*/_jsxs(Layout,{children:[\" \",/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{onLogin:handleLogin})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:renderMainApp()}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:renderAdminDashboard()})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","LoginPage","AdminDashboard","AuthRedirect","MainApp","Layout","jsx","_jsx","jsxs","_jsxs","App","user","setUser","savedUser","localStorage","getItem","JSON","parse","handleLogin","loggedInUser","setItem","stringify","handleLogout","removeItem","renderMainApp","role","onLogout","renderAdminDashboard","children","path","element","onLogin"],"sources":["C:/Users/mjamily/Documents/testing absensi/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport LoginPage from './LoginPage';\nimport AdminDashboard from './AdminDashboard';\nimport AuthRedirect from './AuthRedirect';\nimport MainApp from './MainApp'; // Import MainApp\nimport Layout from './Layout'; // Import Layout\n\n// Keep User interface as it is used in App.tsx\ninterface User {\n  id: string; // Changed from number\n  username: string;\n  role: 'admin' | 'staff';\n  staffId?: string;\n  name: string; // Changed from number\n}\n\nfunction App() {\n  const [user, setUser] = useState<User | null>(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  const handleLogin = (loggedInUser: User) => {\n    localStorage.setItem('user', JSON.stringify(loggedInUser));\n    setUser(loggedInUser);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const renderMainApp = () => {\n    if (user && user.role === 'staff') {\n      return <MainApp user={user} onLogout={handleLogout} />;\n    }\n    return null;\n  };\n\n  const renderAdminDashboard = () => {\n    if (user && user.role === 'admin') {\n      return <AdminDashboard onLogout={handleLogout} />;\n    }\n    return null;\n  };\n\n  return (\n    <Router>\n      <AuthRedirect user={user} />\n      <Layout> {/* Wrap Routes with Layout */}\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\n          <Route path=\"/\" element={renderMainApp()} />\n          <Route path=\"/admin\" element={renderAdminDashboard()} />\n        </Routes>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,WAAW,CAClB,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAE;AACjC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAE;AAE/B;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBASA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAc,IAAM,CAClD,KAAM,CAAAiB,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC9C,MAAO,CAAAF,SAAS,CAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAG,IAAI,CACjD,CAAC,CAAC,CAEF,KAAM,CAAAK,WAAW,CAAIC,YAAkB,EAAK,CAC1CL,YAAY,CAACM,OAAO,CAAC,MAAM,CAAEJ,IAAI,CAACK,SAAS,CAACF,YAAY,CAAC,CAAC,CAC1DP,OAAO,CAACO,YAAY,CAAC,CACvB,CAAC,CAED,KAAM,CAAAG,YAAY,CAAGA,CAAA,GAAM,CACzBR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CAC/BX,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAAY,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAIb,IAAI,EAAIA,IAAI,CAACc,IAAI,GAAK,OAAO,CAAE,CACjC,mBAAOlB,IAAA,CAACH,OAAO,EAACO,IAAI,CAAEA,IAAK,CAACe,QAAQ,CAAEJ,YAAa,CAAE,CAAC,CACxD,CACA,MAAO,KAAI,CACb,CAAC,CAED,KAAM,CAAAK,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAIhB,IAAI,EAAIA,IAAI,CAACc,IAAI,GAAK,OAAO,CAAE,CACjC,mBAAOlB,IAAA,CAACL,cAAc,EAACwB,QAAQ,CAAEJ,YAAa,CAAE,CAAC,CACnD,CACA,MAAO,KAAI,CACb,CAAC,CAED,mBACEb,KAAA,CAACX,MAAM,EAAA8B,QAAA,eACLrB,IAAA,CAACJ,YAAY,EAACQ,IAAI,CAAEA,IAAK,CAAE,CAAC,cAC5BF,KAAA,CAACJ,MAAM,EAAAuB,QAAA,EAAC,GAAC,cACPnB,KAAA,CAACT,MAAM,EAAA4B,QAAA,eACLrB,IAAA,CAACR,KAAK,EAAC8B,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEvB,IAAA,CAACN,SAAS,EAAC8B,OAAO,CAAEb,WAAY,CAAE,CAAE,CAAE,CAAC,cACrEX,IAAA,CAACR,KAAK,EAAC8B,IAAI,CAAC,GAAG,CAACC,OAAO,CAAEN,aAAa,CAAC,CAAE,CAAE,CAAC,cAC5CjB,IAAA,CAACR,KAAK,EAAC8B,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAEH,oBAAoB,CAAC,CAAE,CAAE,CAAC,EAClD,CAAC,EACH,CAAC,EACH,CAAC,CAEb,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}