{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjamily\\\\Documents\\\\percobaan satu\\\\frontend\\\\src\\\\AdminDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [attendance, setAttendance] = useState([]);\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const handleExport = () => {\n    window.open('http://localhost:5000/api/export-excel', '_blank');\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/attendance').then(response => {\n      setAttendance(response.data);\n    });\n  }, []);\n  const handleSort = column => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n  const sortedAttendance = [...attendance].sort((a, b) => {\n    if (sortColumn === null) return 0;\n    const aValue = a[sortColumn];\n    const bValue = b[sortColumn];\n\n    // Custom sorting for time if the column is 'time'\n    if (sortColumn === 'time') {\n      const timeA = new Date(`2000/01/01 ${a.time}`); // Use a dummy date for time comparison\n      const timeB = new Date(`2000/01/01 ${b.time}`);\n      return sortDirection === 'asc' ? timeA.getTime() - timeB.getTime() : timeB.getTime() - timeA.getTime();\n    }\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return sortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n    } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success mb-3\",\n      onClick: handleExport,\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"All Attendance Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Name \", sortColumn === 'name' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('status'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Status \", sortColumn === 'status' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('date'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Date \", sortColumn === 'date' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('time'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Time \", sortColumn === 'time' && (sortDirection === 'asc' ? '▲' : '▼')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedAttendance.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, a.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"t7ssB4hCzfaasdQqad8Z0d2dsI0=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","attendance","setAttendance","sortColumn","setSortColumn","sortDirection","setSortDirection","handleExport","window","open","get","then","response","data","handleSort","column","sortedAttendance","sort","a","b","aValue","bValue","timeA","Date","time","timeB","getTime","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","map","name","status","date","id","_c","$RefreshReg$"],"sources":["C:/Users/mjamily/Documents/percobaan satu/frontend/src/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface Attendance {\n  id: number;\n  staffId: number;\n  name: string;\n  status: string;\n  date: string;\n  time: string; // Added time property\n}\n\nconst AdminDashboard: React.FC = () => {\n  const [attendance, setAttendance] = useState<Attendance[]>([]);\n  const [sortColumn, setSortColumn] = useState<keyof Attendance | null>(null);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const handleExport = () => {\n    window.open('http://localhost:5000/api/export-excel', '_blank');\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/attendance').then((response) => {\n      setAttendance(response.data);\n    });\n  }, []);\n\n  const handleSort = (column: keyof Attendance) => {\n    if (sortColumn === column) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n  };\n\n  const sortedAttendance = [...attendance].sort((a, b) => {\n    if (sortColumn === null) return 0;\n\n    const aValue = a[sortColumn];\n    const bValue = b[sortColumn];\n\n    // Custom sorting for time if the column is 'time'\n    if (sortColumn === 'time') {\n      const timeA = new Date(`2000/01/01 ${a.time}`); // Use a dummy date for time comparison\n      const timeB = new Date(`2000/01/01 ${b.time}`);\n      return sortDirection === 'asc' ? timeA.getTime() - timeB.getTime() : timeB.getTime() - timeA.getTime();\n    }\n\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return sortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n    } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n    return 0;\n  });\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Admin Dashboard</h1>\n      <button className=\"btn btn-success mb-3\" onClick={handleExport}>Export to Excel</button>\n      <h2 className=\"mt-5\">All Attendance Records</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th onClick={() => handleSort('name')} style={{ cursor: 'pointer' }}>\n              Name {sortColumn === 'name' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n            <th onClick={() => handleSort('status')} style={{ cursor: 'pointer' }}>\n              Status {sortColumn === 'status' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n            <th onClick={() => handleSort('date')} style={{ cursor: 'pointer' }}>\n              Date {sortColumn === 'date' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n            <th onClick={() => handleSort('time')} style={{ cursor: 'pointer' }}>\n              Time {sortColumn === 'time' && (sortDirection === 'asc' ? '▲' : '▼')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedAttendance.map((a) => (\n            <tr key={a.id}>\n              <td>{a.name}</td>\n              <td>{a.status}</td>\n              <td>{a.date}</td>\n              <td>{a.time}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}