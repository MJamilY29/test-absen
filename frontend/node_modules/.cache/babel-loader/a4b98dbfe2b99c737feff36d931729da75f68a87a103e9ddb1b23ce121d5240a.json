{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst AuthRedirect = ({\n  user\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (user) {\n      if (user.role === 'admin') {\n        navigate('/admin');\n      } else {\n        navigate('/');\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  return null; // This component doesn't render anything, it just handles redirection\n};\n_s(AuthRedirect, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthRedirect;\nexport default AuthRedirect;\nvar _c;\n$RefreshReg$(_c, \"AuthRedirect\");","map":{"version":3,"names":["useEffect","useNavigate","AuthRedirect","user","_s","navigate","role","_c","$RefreshReg$"],"sources":["C:/Users/mjamily/Documents/percobaan satu/frontend/src/AuthRedirect.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface User {\n  id: number;\n  username: string;\n  role: 'admin' | 'staff';\n  staffId?: number;\n}\n\ninterface AuthRedirectProps {\n  user: User | null;\n}\n\nconst AuthRedirect: React.FC<AuthRedirectProps> = ({ user }) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user) {\n      if (user.role === 'admin') {\n        navigate('/admin');\n      } else {\n        navigate('/');\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n\n  return null; // This component doesn't render anything, it just handles redirection\n};\n\nexport default AuthRedirect;\n"],"mappings":";AAAA,SAAgBA,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAa9C,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIG,IAAI,EAAE;MACR,IAAIA,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;QACzBD,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLA,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,MAAM;MACLA,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACF,IAAI,EAAEE,QAAQ,CAAC,CAAC;EAEpB,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,EAAA,CAhBIF,YAAyC;EAAA,QAC5BD,WAAW;AAAA;AAAAM,EAAA,GADxBL,YAAyC;AAkB/C,eAAeA,YAAY;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}