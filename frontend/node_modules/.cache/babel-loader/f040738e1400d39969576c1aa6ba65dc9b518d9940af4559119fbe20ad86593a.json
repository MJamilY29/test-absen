{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mjamily\\\\Documents\\\\percobaan satu\\\\frontend\\\\src\\\\AdminDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = ({\n  onLogout\n}) => {\n  _s();\n  const [clockInOutRecords, setClockInOutRecords] = useState([]);\n  const [attendanceRecords, setAttendanceRecords] = useState([]);\n  const [staff, setStaff] = useState([]);\n  const [selectedStaffId, setSelectedStaffId] = useState(null);\n  const [clockInOutSortColumn, setClockInOutSortColumn] = useState(null);\n  const [clockInOutSortDirection, setClockInOutSortDirection] = useState('asc');\n  const [clockInOutSearchTerm, setClockInOutSearchTerm] = useState('');\n  const [attendanceSortColumn, setAttendanceSortColumn] = useState(null);\n  const [attendanceSortDirection, setAttendanceSortDirection] = useState('asc');\n  const [attendanceSearchTerm, setAttendanceSearchTerm] = useState('');\n  const [workTimeRecords, setWorkTimeRecords] = useState([]);\n  const [workTimeSortColumn, setWorkTimeSortColumn] = useState(null);\n  const [workTimeSortDirection, setWorkTimeSortDirection] = useState('asc');\n  const [workTimeSearchTerm, setWorkTimeSearchTerm] = useState('');\n  const [selectedExportMonth, setSelectedExportMonth] = useState(new Date().getMonth());\n  const [selectedExportYear, setSelectedExportYear] = useState(new Date().getFullYear());\n  const navigate = useNavigate();\n  const handleExport = () => {\n    window.open('http://localhost:5000/api/export-excel', '_blank');\n  };\n  const handleLogout = () => {\n    onLogout();\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/staff').then(response => {\n      setStaff(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedStaffId) {\n      axios.get(`http://localhost:5000/api/records/${selectedStaffId}`).then(response => {\n        setClockInOutRecords(response.data);\n        processWorkTimeRecords(selectedStaffId, response.data, staff);\n      });\n      axios.get(`http://localhost:5000/api/attendance`).then(response => {\n        const filteredAttendance = response.data.filter(record => record.staffId === selectedStaffId);\n        setAttendanceRecords(filteredAttendance);\n      });\n    } else {\n      setClockInOutRecords([]);\n      setAttendanceRecords([]);\n      setWorkTimeRecords([]);\n    }\n  }, [selectedStaffId, staff]);\n  const handleClockInOutSort = column => {\n    if (clockInOutSortColumn === column) {\n      setClockInOutSortDirection(clockInOutSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setClockInOutSortColumn(column);\n      setClockInOutSortDirection('asc');\n    }\n  };\n  const handleAttendanceSort = column => {\n    if (attendanceSortColumn === column) {\n      setAttendanceSortDirection(attendanceSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setAttendanceSortColumn(column);\n      setAttendanceSortDirection('asc');\n    }\n  };\n  const processWorkTimeRecords = (staffId, records, allStaff) => {\n    const dailyRecords = {};\n    records.forEach(record => {\n      const date = new Date(record.timestamp).toISOString().slice(0, 10);\n      if (!dailyRecords[date]) {\n        dailyRecords[date] = [];\n      }\n      dailyRecords[date].push(record);\n    });\n    const processedRecords = [];\n    for (const date in dailyRecords) {\n      const recordsForDate = dailyRecords[date].sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n      const clockIn = recordsForDate.find(r => r.type === 'clock-in');\n      const clockOut = recordsForDate.reverse().find(r => r.type === 'clock-out');\n      let totalHours = 'N/A';\n      if (clockIn && clockOut) {\n        const startTime = new Date(clockIn.timestamp).getTime();\n        const endTime = new Date(clockOut.timestamp).getTime();\n        const diffMillis = endTime - startTime;\n        const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n        const minutes = Math.floor(diffMillis % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(diffMillis % (1000 * 60 * 60) % (1000 * 60) / 1000);\n        totalHours = `${hours} jam ${minutes} menit ${seconds} detik`;\n      } else if (clockIn) {\n        totalHours = 'Sedang Bekerja';\n      }\n      if (clockIn || clockOut) {\n        var _allStaff$find;\n        let keterangan = '';\n        if (clockIn) {\n          const clockInDate = new Date(clockIn.timestamp);\n          const sevenAM = new Date(clockInDate);\n          sevenAM.setHours(7, 0, 0, 0);\n          if (clockInDate.getTime() < sevenAM.getTime()) {\n            keterangan = 'Datang Lebih Awal';\n          } else if (clockInDate.getHours() === 7 && clockInDate.getMinutes() === 0 && clockInDate.getSeconds() === 0) {\n            keterangan = 'Tepat Waktu';\n          } else {\n            keterangan = 'Terlambat';\n          }\n        }\n        processedRecords.push({\n          _id: clockIn ? clockIn._id : '',\n          staffId: staffId,\n          name: ((_allStaff$find = allStaff.find(s => s._id === staffId)) === null || _allStaff$find === void 0 ? void 0 : _allStaff$find.name) || 'Unknown',\n          date: date,\n          clockInTime: clockIn ? new Date(clockIn.timestamp).toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false\n          }) : 'N/A',\n          clockOutTime: clockOut ? new Date(clockOut.timestamp).toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour12: false\n          }) : 'N/A',\n          totalHours: totalHours,\n          keterangan: keterangan\n        });\n      }\n    }\n    setWorkTimeRecords(processedRecords);\n  };\n  const sortedAttendanceRecords = [...attendanceRecords].filter(a => a.date.toLowerCase().includes(attendanceSearchTerm.toLowerCase()) || a.status.toLowerCase().includes(attendanceSearchTerm.toLowerCase())).sort((a, b) => {\n    if (attendanceSortColumn === null) return 0;\n    const aValue = a[attendanceSortColumn];\n    const bValue = b[attendanceSortColumn];\n    return attendanceSortDirection === 'asc' ? String(aValue).localeCompare(String(bValue)) : String(bValue).localeCompare(String(aValue));\n  });\n  const handleWorkTimeSort = column => {\n    if (workTimeSortColumn === column) {\n      setWorkTimeSortDirection(workTimeSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setWorkTimeSortColumn(column);\n      setWorkTimeSortDirection('asc');\n    }\n  };\n  const sortedWorkTimeRecords = [...workTimeRecords].filter(r => r.name.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) || r.date.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) || r.clockInTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) || r.clockOutTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) || r.totalHours.toLowerCase().includes(workTimeSearchTerm.toLowerCase())).sort((a, b) => {\n    if (workTimeSortColumn === null) return 0;\n    const aValue = a[workTimeSortColumn];\n    const bValue = b[workTimeSortColumn];\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return workTimeSortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n    } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n      return workTimeSortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n    }\n    return 0;\n  });\n  const staffOptions = staff.map(s => ({\n    value: s._id,\n    label: s.name\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger mb-3\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success me-2\",\n        onClick: handleExport,\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select me-2\",\n        style: {\n          width: '150px'\n        },\n        value: selectedExportMonth,\n        onChange: e => setSelectedExportMonth(parseInt(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: -1,\n          children: \"Semua Bulan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'].map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        style: {\n          width: '120px'\n        },\n        value: selectedExportYear,\n        onChange: e => setSelectedExportYear(parseInt(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: -1,\n          children: \"Semua Tahun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), Array.from(new Set(attendanceRecords.map(a => new Date(a.date).getFullYear()))).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5\",\n      children: \"Riwayat Absensi Staff dan Guru\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"staff-select\",\n        className: \"form-label\",\n        children: \"Select Staff:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"staff-select\",\n        options: staffOptions,\n        value: staffOptions.find(option => option.value === selectedStaffId),\n        onChange: selectedOption => setSelectedStaffId(selectedOption ? selectedOption.value : null),\n        isClearable: true,\n        isSearchable: true,\n        placeholder: \"-- Select or search for a Staff --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), selectedStaffId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5\",\n        children: \"Riwayat Kehadiran\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Cari riwayat kehadiran...\",\n          value: attendanceSearchTerm,\n          onChange: e => setAttendanceSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleAttendanceSort('name'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Nama \", attendanceSortColumn === 'name' && (attendanceSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleAttendanceSort('status'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Status \", attendanceSortColumn === 'status' && (attendanceSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleAttendanceSort('date'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Tanggal \", attendanceSortColumn === 'date' && (attendanceSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleAttendanceSort('time'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Waktu \", attendanceSortColumn === 'time' && (attendanceSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedAttendanceRecords.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: a.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: a.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: a.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: a.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, a._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5\",\n        children: \"Riwayat Waktu Kerja\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Cari riwayat waktu kerja...\",\n          value: workTimeSearchTerm,\n          onChange: e => setWorkTimeSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleWorkTimeSort('name'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Nama \", workTimeSortColumn === 'name' && (workTimeSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleWorkTimeSort('date'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Tanggal \", workTimeSortColumn === 'date' && (workTimeSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleWorkTimeSort('clockInTime'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Jam Masuk \", workTimeSortColumn === 'clockInTime' && (workTimeSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleWorkTimeSort('clockOutTime'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Jam Pulang \", workTimeSortColumn === 'clockOutTime' && (workTimeSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleWorkTimeSort('totalHours'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Total Jam Kerja \", workTimeSortColumn === 'totalHours' && (workTimeSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                onClick: () => handleWorkTimeSort('keterangan'),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [\"Keterangan \", workTimeSortColumn === 'keterangan' && (workTimeSortDirection === 'asc' ? '▲' : '▼')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedWorkTimeRecords.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.clockInTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.clockOutTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.totalHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: record.keterangan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this)]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !selectedStaffId && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a staff member to view their attendance records.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"ck4AGo5Dir97M5tWZC4fwhUW320=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","onLogout","_s","clockInOutRecords","setClockInOutRecords","attendanceRecords","setAttendanceRecords","staff","setStaff","selectedStaffId","setSelectedStaffId","clockInOutSortColumn","setClockInOutSortColumn","clockInOutSortDirection","setClockInOutSortDirection","clockInOutSearchTerm","setClockInOutSearchTerm","attendanceSortColumn","setAttendanceSortColumn","attendanceSortDirection","setAttendanceSortDirection","attendanceSearchTerm","setAttendanceSearchTerm","workTimeRecords","setWorkTimeRecords","workTimeSortColumn","setWorkTimeSortColumn","workTimeSortDirection","setWorkTimeSortDirection","workTimeSearchTerm","setWorkTimeSearchTerm","selectedExportMonth","setSelectedExportMonth","Date","getMonth","selectedExportYear","setSelectedExportYear","getFullYear","navigate","handleExport","window","open","handleLogout","get","then","response","data","processWorkTimeRecords","filteredAttendance","filter","record","staffId","handleClockInOutSort","column","handleAttendanceSort","records","allStaff","dailyRecords","forEach","date","timestamp","toISOString","slice","push","processedRecords","recordsForDate","sort","a","b","getTime","clockIn","find","r","type","clockOut","reverse","totalHours","startTime","endTime","diffMillis","hours","Math","floor","minutes","seconds","_allStaff$find","keterangan","clockInDate","sevenAM","setHours","getHours","getMinutes","getSeconds","_id","name","s","clockInTime","toLocaleTimeString","hour","minute","second","hour12","clockOutTime","sortedAttendanceRecords","toLowerCase","includes","status","aValue","bValue","String","localeCompare","handleWorkTimeSort","sortedWorkTimeRecords","staffOptions","map","value","label","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onChange","e","parseInt","target","month","index","Array","from","Set","year","htmlFor","id","options","option","selectedOption","isClearable","isSearchable","placeholder","cursor","time","_c","$RefreshReg$"],"sources":["C:/Users/mjamily/Documents/percobaan satu/frontend/src/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\n\ninterface ClockInOutRecord {\n  _id: string; // Changed from id: number\n  staffId: string;\n  timestamp: string;\n  type: 'clock-in' | 'clock-out';\n}\n\ninterface WorkTimeRecord {\n  _id: string; // Kept as string\n  staffId: string;\n  name: string;\n  date: string;\n  clockInTime: string;\n  clockOutTime: string;\n  totalHours: string;\n  keterangan: string;\n}\n\ninterface AttendanceRecord {\n  _id: string; // Changed from id: number\n  staffId: string;\n  name: string;\n  status: string;\n  date: string;\n  time: string;\n}\n\ninterface Staff {\n  _id: string; // Changed from id: number\n  name: string;\n}\n\ninterface AdminDashboardProps {\n  onLogout: () => void;\n}\n\nconst AdminDashboard: React.FC<AdminDashboardProps> = ({ onLogout }) => {\n  const [clockInOutRecords, setClockInOutRecords] = useState<ClockInOutRecord[]>([]);\n  const [attendanceRecords, setAttendanceRecords] = useState<AttendanceRecord[]>([]);\n  const [staff, setStaff] = useState<Staff[]>([]);\n  const [selectedStaffId, setSelectedStaffId] = useState<string | null>(null);\n  const [clockInOutSortColumn, setClockInOutSortColumn] = useState<keyof ClockInOutRecord | null>(null);\n  const [clockInOutSortDirection, setClockInOutSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [clockInOutSearchTerm, setClockInOutSearchTerm] = useState<string>('');\n\n  const [attendanceSortColumn, setAttendanceSortColumn] = useState<keyof AttendanceRecord | null>(null);\n  const [attendanceSortDirection, setAttendanceSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [attendanceSearchTerm, setAttendanceSearchTerm] = useState<string>('');\n\n  const [workTimeRecords, setWorkTimeRecords] = useState<WorkTimeRecord[]>([]);\n  const [workTimeSortColumn, setWorkTimeSortColumn] = useState<keyof WorkTimeRecord | null>(null);\n  const [workTimeSortDirection, setWorkTimeSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [workTimeSearchTerm, setWorkTimeSearchTerm] = useState<string>('');\n  const [selectedExportMonth, setSelectedExportMonth] = useState(new Date().getMonth());\n  const [selectedExportYear, setSelectedExportYear] = useState(new Date().getFullYear());\n  const navigate = useNavigate();\n\n  const handleExport = () => {\n    window.open('http://localhost:5000/api/export-excel', '_blank');\n  };\n\n  const handleLogout = () => {\n    onLogout();\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/staff').then((response) => {\n      setStaff(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (selectedStaffId) {\n      axios.get(`http://localhost:5000/api/records/${selectedStaffId}`).then((response) => {\n        setClockInOutRecords(response.data);\n        processWorkTimeRecords(selectedStaffId, response.data, staff);\n      });\n      axios.get(`http://localhost:5000/api/attendance`).then((response) => {\n        const filteredAttendance = response.data.filter((record: AttendanceRecord) => record.staffId === selectedStaffId);\n        setAttendanceRecords(filteredAttendance);\n      });\n    } else {\n      setClockInOutRecords([]);\n      setAttendanceRecords([]);\n      setWorkTimeRecords([]);\n    }\n  }, [selectedStaffId, staff]);\n\n  const handleClockInOutSort = (column: keyof ClockInOutRecord) => {\n    if (clockInOutSortColumn === column) {\n      setClockInOutSortDirection(clockInOutSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setClockInOutSortColumn(column);\n      setClockInOutSortDirection('asc');\n    }\n  };\n\n  const handleAttendanceSort = (column: keyof AttendanceRecord) => {\n    if (attendanceSortColumn === column) {\n      setAttendanceSortDirection(attendanceSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setAttendanceSortColumn(column);\n      setAttendanceSortDirection('asc');\n    }\n  };\n\n  const processWorkTimeRecords = (staffId: string, records: ClockInOutRecord[], allStaff: Staff[]) => {\n    const dailyRecords: { [key: string]: ClockInOutRecord[] } = {};\n    records.forEach(record => {\n      const date = new Date(record.timestamp).toISOString().slice(0, 10);\n      if (!dailyRecords[date]) {\n        dailyRecords[date] = [];\n      }\n      dailyRecords[date].push(record);\n    });\n\n    const processedRecords: WorkTimeRecord[] = [];\n    for (const date in dailyRecords) {\n      const recordsForDate = dailyRecords[date].sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n      const clockIn = recordsForDate.find(r => r.type === 'clock-in');\n      const clockOut = recordsForDate.reverse().find(r => r.type === 'clock-out');\n\n      let totalHours = 'N/A';\n      if (clockIn && clockOut) {\n        const startTime = new Date(clockIn.timestamp).getTime();\n        const endTime = new Date(clockOut.timestamp).getTime();\n        const diffMillis = endTime - startTime;\n\n        const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n        const minutes = Math.floor((diffMillis % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor(((diffMillis % (1000 * 60 * 60)) % (1000 * 60)) / 1000);\n\n        totalHours = `${hours} jam ${minutes} menit ${seconds} detik`;\n      } else if (clockIn) {\n        totalHours = 'Sedang Bekerja';\n      }\n\n      if (clockIn || clockOut) {\n        let keterangan = '';\n        if (clockIn) {\n          const clockInDate = new Date(clockIn.timestamp);\n          const sevenAM = new Date(clockInDate);\n          sevenAM.setHours(7, 0, 0, 0);\n\n          if (clockInDate.getTime() < sevenAM.getTime()) {\n            keterangan = 'Datang Lebih Awal';\n          } else if (clockInDate.getHours() === 7 && clockInDate.getMinutes() === 0 && clockInDate.getSeconds() === 0) {\n            keterangan = 'Tepat Waktu';\n          } else {\n            keterangan = 'Terlambat';\n          }\n        }\n\n        processedRecords.push({\n          _id: clockIn ? clockIn._id : '',\n          staffId: staffId,\n          name: allStaff.find(s => s._id === staffId)?.name || 'Unknown',\n          date: date,\n          clockInTime: clockIn ? new Date(clockIn.timestamp).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'N/A',\n          clockOutTime: clockOut ? new Date(clockOut.timestamp).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'N/A',\n          totalHours: totalHours,\n          keterangan: keterangan,\n        });\n      }\n    }\n    setWorkTimeRecords(processedRecords);\n  };\n\n  const sortedAttendanceRecords = [...attendanceRecords]\n    .filter((a) =>\n      a.date.toLowerCase().includes(attendanceSearchTerm.toLowerCase()) ||\n      a.status.toLowerCase().includes(attendanceSearchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      if (attendanceSortColumn === null) return 0;\n\n      const aValue = a[attendanceSortColumn];\n      const bValue = b[attendanceSortColumn];\n\n      return attendanceSortDirection === 'asc' ? String(aValue).localeCompare(String(bValue)) : String(bValue).localeCompare(String(aValue));\n    });\n\n  const handleWorkTimeSort = (column: keyof WorkTimeRecord) => {\n    if (workTimeSortColumn === column) {\n      setWorkTimeSortDirection(workTimeSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setWorkTimeSortColumn(column);\n      setWorkTimeSortDirection('asc');\n    }\n  };\n\n  const sortedWorkTimeRecords = [...workTimeRecords]\n    .filter((r) =>\n      r.name.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.date.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.clockInTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.clockOutTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.totalHours.toLowerCase().includes(workTimeSearchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      if (workTimeSortColumn === null) return 0;\n\n      const aValue = a[workTimeSortColumn];\n      const bValue = b[workTimeSortColumn];\n\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\n        return workTimeSortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n      } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n        return workTimeSortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n      return 0;\n    });\n\n  const staffOptions = staff.map(s => ({ value: s._id, label: s.name }));\n\n  return (\n    <div>\n      <button className=\"btn btn-danger mb-3\" onClick={handleLogout}>Logout</button>\n      <h1>Admin Dashboard</h1>\n      <div className=\"d-flex align-items-center mb-3\">\n        <button className=\"btn btn-success me-2\" onClick={handleExport}>Export to Excel</button>\n        <select className=\"form-select me-2\" style={{ width: '150px' }} value={selectedExportMonth} onChange={(e) => setSelectedExportMonth(parseInt(e.target.value))}>\n          <option value={-1}>Semua Bulan</option>\n          {['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'].map((month, index) => (\n            <option key={index} value={index}>{month}</option>\n          ))}\n        </select>\n        <select className=\"form-select\" style={{ width: '120px' }} value={selectedExportYear} onChange={(e) => setSelectedExportYear(parseInt(e.target.value))}>\n          <option value={-1}>Semua Tahun</option>\n          {Array.from(new Set(attendanceRecords.map(a => new Date(a.date).getFullYear()))).map(year => (\n            <option key={year} value={year}>{year}</option>\n          ))}\n        </select>\n      </div>\n\n      <h2 className=\"mt-5\">Riwayat Absensi Staff dan Guru</h2>\n      <div className=\"mb-3\">\n        <label htmlFor=\"staff-select\" className=\"form-label\">Select Staff:</label>\n        <Select\n          id=\"staff-select\"\n          options={staffOptions}\n          value={staffOptions.find(option => option.value === selectedStaffId)}\n          onChange={(selectedOption) => setSelectedStaffId(selectedOption ? selectedOption.value : null)}\n          isClearable\n          isSearchable\n          placeholder=\"-- Select or search for a Staff --\"\n        />\n      </div>\n\n      {selectedStaffId && (\n        <>\n          <h2 className=\"mt-5\">Riwayat Kehadiran</h2>\n          <div className=\"mb-3 mt-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Cari riwayat kehadiran...\"\n              value={attendanceSearchTerm}\n              onChange={(e) => setAttendanceSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th onClick={() => handleAttendanceSort('name')} style={{ cursor: 'pointer' }}>\n                    Nama {attendanceSortColumn === 'name' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleAttendanceSort('status')} style={{ cursor: 'pointer' }}>\n                    Status {attendanceSortColumn === 'status' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleAttendanceSort('date')} style={{ cursor: 'pointer' }}>\n                    Tanggal {attendanceSortColumn === 'date' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleAttendanceSort('time')} style={{ cursor: 'pointer' }}>\n                    Waktu {attendanceSortColumn === 'time' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedAttendanceRecords.map((a) => (\n                  <tr key={a._id}>\n                    <td>{a.name}</td>\n                    <td>{a.status}</td>\n                    <td>{a.date}</td>\n                    <td>{a.time}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <h2 className=\"mt-5\">Riwayat Waktu Kerja</h2>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Cari riwayat waktu kerja...\"\n              value={workTimeSearchTerm}\n              onChange={(e) => setWorkTimeSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th onClick={() => handleWorkTimeSort('name')} style={{ cursor: 'pointer' }}>\n                    Nama {workTimeSortColumn === 'name' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('date')} style={{ cursor: 'pointer' }}>\n                    Tanggal {workTimeSortColumn === 'date' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('clockInTime')} style={{ cursor: 'pointer' }}>\n                    Jam Masuk {workTimeSortColumn === 'clockInTime' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('clockOutTime')} style={{ cursor: 'pointer' }}>\n                    Jam Pulang {workTimeSortColumn === 'clockOutTime' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('totalHours')} style={{ cursor: 'pointer' }}>\n                    Total Jam Kerja {workTimeSortColumn === 'totalHours' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('keterangan')} style={{ cursor: 'pointer' }}>\n                    Keterangan {workTimeSortColumn === 'keterangan' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedWorkTimeRecords.map((record) => (\n                  <tr key={record._id}>\n                    <td>{record.name}</td>\n                    <td>{record.date}</td>\n                    <td>{record.clockInTime}</td>\n                    <td>{record.clockOutTime}</td>\n                    <td>{record.totalHours}</td>\n                    <td>{record.keterangan}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n      {!selectedStaffId && <p>Please select a staff member to view their attendance records.</p>}\n    </div>\n  );\n};\n\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}