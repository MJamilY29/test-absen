{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import Select from'react-select';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminDashboard=_ref=>{let{onLogout}=_ref;const[clockInOutRecords,setClockInOutRecords]=useState([]);const[attendanceRecords,setAttendanceRecords]=useState([]);const[staff,setStaff]=useState([]);const[selectedStaffId,setSelectedStaffId]=useState(null);const[clockInOutSortColumn,setClockInOutSortColumn]=useState(null);const[clockInOutSortDirection,setClockInOutSortDirection]=useState('asc');const[clockInOutSearchTerm,setClockInOutSearchTerm]=useState('');const[attendanceSortColumn,setAttendanceSortColumn]=useState(null);const[attendanceSortDirection,setAttendanceSortDirection]=useState('asc');const[attendanceSearchTerm,setAttendanceSearchTerm]=useState('');const[workTimeRecords,setWorkTimeRecords]=useState([]);const[workTimeSortColumn,setWorkTimeSortColumn]=useState(null);const[workTimeSortDirection,setWorkTimeSortDirection]=useState('asc');const[workTimeSearchTerm,setWorkTimeSearchTerm]=useState('');const[selectedExportMonth,setSelectedExportMonth]=useState(new Date().getMonth());const[selectedExportYear,setSelectedExportYear]=useState(new Date().getFullYear());const navigate=useNavigate();const handleExport=()=>{const staffIdParam=selectedStaffId?`staffId=${selectedStaffId}`:'';const monthParam=selectedExportMonth!==-1?`month=${selectedExportMonth+1}`:'';// Months are 1-indexed in backend\nconst yearParam=selectedExportYear!==-1?`year=${selectedExportYear}`:'';const params=[staffIdParam,monthParam,yearParam].filter(Boolean).join('&');const url=`http://localhost:5000/api/export-excel${params?`?${params}`:''}`;window.open(url,'_blank');};const handleLogout=()=>{onLogout();};useEffect(()=>{axios.get('http://localhost:5000/api/staff').then(response=>{setStaff(response.data);});},[]);useEffect(()=>{if(selectedStaffId){axios.get(`http://localhost:5000/api/records/${selectedStaffId}`).then(response=>{setClockInOutRecords(response.data);processWorkTimeRecords(selectedStaffId,response.data,staff);});axios.get(`http://localhost:5000/api/attendance`).then(response=>{const filteredAttendance=response.data.filter(record=>record.staffId===selectedStaffId);setAttendanceRecords(filteredAttendance);});}else{setClockInOutRecords([]);setAttendanceRecords([]);setWorkTimeRecords([]);}},[selectedStaffId,staff]);const handleClockInOutSort=column=>{if(clockInOutSortColumn===column){setClockInOutSortDirection(clockInOutSortDirection==='asc'?'desc':'asc');}else{setClockInOutSortColumn(column);setClockInOutSortDirection('asc');}};const handleAttendanceSort=column=>{if(attendanceSortColumn===column){setAttendanceSortDirection(attendanceSortDirection==='asc'?'desc':'asc');}else{setAttendanceSortColumn(column);setAttendanceSortDirection('asc');}};const processWorkTimeRecords=(staffId,records,allStaff)=>{const dailyRecords={};records.forEach(record=>{const date=new Date(record.timestamp).toISOString().slice(0,10);if(!dailyRecords[date]){dailyRecords[date]=[];}dailyRecords[date].push(record);});const processedRecords=[];for(const date in dailyRecords){const recordsForDate=dailyRecords[date].sort((a,b)=>new Date(a.timestamp).getTime()-new Date(b.timestamp).getTime());const clockIn=recordsForDate.find(r=>r.type==='clock-in');const clockOut=recordsForDate.reverse().find(r=>r.type==='clock-out');let totalHours='N/A';if(clockIn&&clockOut){const startTime=new Date(clockIn.timestamp).getTime();const endTime=new Date(clockOut.timestamp).getTime();const diffMillis=endTime-startTime;const hours=Math.floor(diffMillis/(1000*60*60));const minutes=Math.floor(diffMillis%(1000*60*60)/(1000*60));const seconds=Math.floor(diffMillis%(1000*60*60)%(1000*60)/1000);totalHours=`${hours} jam ${minutes} menit ${seconds} detik`;}else if(clockIn){totalHours='Sedang Bekerja';}if(clockIn||clockOut){var _allStaff$find;let keterangan='';if(clockIn){const clockInDate=new Date(clockIn.timestamp);const sevenAM=new Date(clockInDate);sevenAM.setHours(7,0,0,0);if(clockInDate.getTime()<sevenAM.getTime()){keterangan='Datang Lebih Awal';}else if(clockInDate.getHours()===7&&clockInDate.getMinutes()===0&&clockInDate.getSeconds()===0){keterangan='Tepat Waktu';}else{keterangan='Terlambat';}}processedRecords.push({_id:clockIn?clockIn._id:'',staffId:staffId,name:((_allStaff$find=allStaff.find(s=>s._id===staffId))===null||_allStaff$find===void 0?void 0:_allStaff$find.name)||'Unknown',date:date,clockInTime:clockIn?new Date(clockIn.timestamp).toLocaleTimeString('en-US',{hour:'2-digit',minute:'2-digit',second:'2-digit',hour12:false}):'N/A',clockOutTime:clockOut?new Date(clockOut.timestamp).toLocaleTimeString('en-US',{hour:'2-digit',minute:'2-digit',second:'2-digit',hour12:false}):'N/A',totalHours:totalHours,keterangan:keterangan});}}setWorkTimeRecords(processedRecords);};const sortedAttendanceRecords=[...attendanceRecords].filter(a=>a.date.toLowerCase().includes(attendanceSearchTerm.toLowerCase())||a.status.toLowerCase().includes(attendanceSearchTerm.toLowerCase())).sort((a,b)=>{if(attendanceSortColumn===null)return 0;const aValue=a[attendanceSortColumn];const bValue=b[attendanceSortColumn];return attendanceSortDirection==='asc'?String(aValue).localeCompare(String(bValue)):String(bValue).localeCompare(String(aValue));});const handleWorkTimeSort=column=>{if(workTimeSortColumn===column){setWorkTimeSortDirection(workTimeSortDirection==='asc'?'desc':'asc');}else{setWorkTimeSortColumn(column);setWorkTimeSortDirection('asc');}};const sortedWorkTimeRecords=[...workTimeRecords].filter(r=>r.name.toLowerCase().includes(workTimeSearchTerm.toLowerCase())||r.date.toLowerCase().includes(workTimeSearchTerm.toLowerCase())||r.clockInTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase())||r.clockOutTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase())||r.totalHours.toLowerCase().includes(workTimeSearchTerm.toLowerCase())).sort((a,b)=>{if(workTimeSortColumn===null)return 0;const aValue=a[workTimeSortColumn];const bValue=b[workTimeSortColumn];if(typeof aValue==='string'&&typeof bValue==='string'){return workTimeSortDirection==='asc'?aValue.localeCompare(bValue):bValue.localeCompare(aValue);}else if(typeof aValue==='number'&&typeof bValue==='number'){return workTimeSortDirection==='asc'?aValue-bValue:bValue-aValue;}return 0;});const staffOptions=staff.map(s=>({value:s._id,label:s.name}));return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger mb-3\",onClick:handleLogout,children:\"Logout\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success me-2\",onClick:handleExport,children:\"Export to Excel\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select me-2\",style:{width:'130px'},value:selectedExportMonth,onChange:e=>setSelectedExportMonth(parseInt(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:-1,children:\"Semua Bulan\"}),['Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','November','Desember'].map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index))]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",style:{width:'145px'},value:selectedExportYear,onChange:e=>setSelectedExportYear(parseInt(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:-1,children:\"Semua Tahun\"}),Array.from(new Set(attendanceRecords.map(a=>new Date(a.date).getFullYear()))).map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year))]})]}),/*#__PURE__*/_jsx(\"h2\",{className:\"mt-5\",children:\"Riwayat Absensi Staff dan Guru\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"staff-select\",className:\"form-label\",children:\"Select Staff:\"}),/*#__PURE__*/_jsx(Select,{id:\"staff-select\",options:staffOptions,value:staffOptions.find(option=>option.value===selectedStaffId),onChange:selectedOption=>setSelectedStaffId(selectedOption?selectedOption.value:null),isClearable:true,isSearchable:true,placeholder:\"-- Select or search for a Staff --\"})]}),selectedStaffId&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mt-5\",children:\"Riwayat Kehadiran\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3 mt-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Cari riwayat kehadiran...\",value:attendanceSearchTerm,onChange:e=>setAttendanceSearchTerm(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleAttendanceSort('name'),style:{cursor:'pointer'},children:[\"Nama \",attendanceSortColumn==='name'&&(attendanceSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleAttendanceSort('status'),style:{cursor:'pointer'},children:[\"Status \",attendanceSortColumn==='status'&&(attendanceSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleAttendanceSort('date'),style:{cursor:'pointer'},children:[\"Tanggal \",attendanceSortColumn==='date'&&(attendanceSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleAttendanceSort('time'),style:{cursor:'pointer'},children:[\"Waktu \",attendanceSortColumn==='time'&&(attendanceSortDirection==='asc'?'▲':'▼')]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortedAttendanceRecords.map(a=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:a.name}),/*#__PURE__*/_jsx(\"td\",{children:a.status}),/*#__PURE__*/_jsx(\"td\",{children:a.date}),/*#__PURE__*/_jsx(\"td\",{children:a.time})]},a._id))})]})}),/*#__PURE__*/_jsx(\"h2\",{className:\"mt-5\",children:\"Riwayat Waktu Kerja\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Cari riwayat waktu kerja...\",value:workTimeSearchTerm,onChange:e=>setWorkTimeSearchTerm(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleWorkTimeSort('name'),style:{cursor:'pointer'},children:[\"Nama \",workTimeSortColumn==='name'&&(workTimeSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleWorkTimeSort('date'),style:{cursor:'pointer'},children:[\"Tanggal \",workTimeSortColumn==='date'&&(workTimeSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleWorkTimeSort('clockInTime'),style:{cursor:'pointer'},children:[\"Jam Masuk \",workTimeSortColumn==='clockInTime'&&(workTimeSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleWorkTimeSort('clockOutTime'),style:{cursor:'pointer'},children:[\"Jam Pulang \",workTimeSortColumn==='clockOutTime'&&(workTimeSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleWorkTimeSort('totalHours'),style:{cursor:'pointer'},children:[\"Total Jam Kerja \",workTimeSortColumn==='totalHours'&&(workTimeSortDirection==='asc'?'▲':'▼')]}),/*#__PURE__*/_jsxs(\"th\",{onClick:()=>handleWorkTimeSort('keterangan'),style:{cursor:'pointer'},children:[\"Keterangan \",workTimeSortColumn==='keterangan'&&(workTimeSortDirection==='asc'?'▲':'▼')]})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortedWorkTimeRecords.map(record=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:record.name}),/*#__PURE__*/_jsx(\"td\",{children:record.date}),/*#__PURE__*/_jsx(\"td\",{children:record.clockInTime}),/*#__PURE__*/_jsx(\"td\",{children:record.clockOutTime}),/*#__PURE__*/_jsx(\"td\",{children:record.totalHours}),/*#__PURE__*/_jsx(\"td\",{children:record.keterangan})]},record._id))})]})})]}),!selectedStaffId&&/*#__PURE__*/_jsx(\"p\",{children:\"Please select a staff member to view their attendance records.\"})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Select","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AdminDashboard","_ref","onLogout","clockInOutRecords","setClockInOutRecords","attendanceRecords","setAttendanceRecords","staff","setStaff","selectedStaffId","setSelectedStaffId","clockInOutSortColumn","setClockInOutSortColumn","clockInOutSortDirection","setClockInOutSortDirection","clockInOutSearchTerm","setClockInOutSearchTerm","attendanceSortColumn","setAttendanceSortColumn","attendanceSortDirection","setAttendanceSortDirection","attendanceSearchTerm","setAttendanceSearchTerm","workTimeRecords","setWorkTimeRecords","workTimeSortColumn","setWorkTimeSortColumn","workTimeSortDirection","setWorkTimeSortDirection","workTimeSearchTerm","setWorkTimeSearchTerm","selectedExportMonth","setSelectedExportMonth","Date","getMonth","selectedExportYear","setSelectedExportYear","getFullYear","navigate","handleExport","staffIdParam","monthParam","yearParam","params","filter","Boolean","join","url","window","open","handleLogout","get","then","response","data","processWorkTimeRecords","filteredAttendance","record","staffId","handleClockInOutSort","column","handleAttendanceSort","records","allStaff","dailyRecords","forEach","date","timestamp","toISOString","slice","push","processedRecords","recordsForDate","sort","a","b","getTime","clockIn","find","r","type","clockOut","reverse","totalHours","startTime","endTime","diffMillis","hours","Math","floor","minutes","seconds","_allStaff$find","keterangan","clockInDate","sevenAM","setHours","getHours","getMinutes","getSeconds","_id","name","s","clockInTime","toLocaleTimeString","hour","minute","second","hour12","clockOutTime","sortedAttendanceRecords","toLowerCase","includes","status","aValue","bValue","String","localeCompare","handleWorkTimeSort","sortedWorkTimeRecords","staffOptions","map","value","label","children","className","onClick","style","width","onChange","e","parseInt","target","month","index","Array","from","Set","year","htmlFor","id","options","option","selectedOption","isClearable","isSearchable","placeholder","cursor","time"],"sources":["C:/Users/mjamily/Documents/testing absensi/frontend/src/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Select from 'react-select';\n\ninterface ClockInOutRecord {\n  _id: string; // Changed from id: number\n  staffId: string;\n  timestamp: string;\n  type: 'clock-in' | 'clock-out';\n}\n\ninterface WorkTimeRecord {\n  _id: string; // Kept as string\n  staffId: string;\n  name: string;\n  date: string;\n  clockInTime: string;\n  clockOutTime: string;\n  totalHours: string;\n  keterangan: string;\n}\n\ninterface AttendanceRecord {\n  _id: string; // Changed from id: number\n  staffId: string;\n  name: string;\n  status: string;\n  date: string;\n  time: string;\n}\n\ninterface Staff {\n  _id: string; // Changed from id: number\n  name: string;\n}\n\ninterface AdminDashboardProps {\n  onLogout: () => void;\n}\n\nconst AdminDashboard: React.FC<AdminDashboardProps> = ({ onLogout }) => {\n  const [clockInOutRecords, setClockInOutRecords] = useState<ClockInOutRecord[]>([]);\n  const [attendanceRecords, setAttendanceRecords] = useState<AttendanceRecord[]>([]);\n  const [staff, setStaff] = useState<Staff[]>([]);\n  const [selectedStaffId, setSelectedStaffId] = useState<string | null>(null);\n  const [clockInOutSortColumn, setClockInOutSortColumn] = useState<keyof ClockInOutRecord | null>(null);\n  const [clockInOutSortDirection, setClockInOutSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [clockInOutSearchTerm, setClockInOutSearchTerm] = useState<string>('');\n\n  const [attendanceSortColumn, setAttendanceSortColumn] = useState<keyof AttendanceRecord | null>(null);\n  const [attendanceSortDirection, setAttendanceSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [attendanceSearchTerm, setAttendanceSearchTerm] = useState<string>('');\n\n  const [workTimeRecords, setWorkTimeRecords] = useState<WorkTimeRecord[]>([]);\n  const [workTimeSortColumn, setWorkTimeSortColumn] = useState<keyof WorkTimeRecord | null>(null);\n  const [workTimeSortDirection, setWorkTimeSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [workTimeSearchTerm, setWorkTimeSearchTerm] = useState<string>('');\n  const [selectedExportMonth, setSelectedExportMonth] = useState(new Date().getMonth());\n  const [selectedExportYear, setSelectedExportYear] = useState(new Date().getFullYear());\n  const navigate = useNavigate();\n\n  const handleExport = () => {\n    const staffIdParam = selectedStaffId ? `staffId=${selectedStaffId}` : '';\n    const monthParam = selectedExportMonth !== -1 ? `month=${selectedExportMonth + 1}` : ''; // Months are 1-indexed in backend\n    const yearParam = selectedExportYear !== -1 ? `year=${selectedExportYear}` : '';\n\n    const params = [staffIdParam, monthParam, yearParam].filter(Boolean).join('&');\n    const url = `http://localhost:5000/api/export-excel${params ? `?${params}` : ''}`;\n    window.open(url, '_blank');\n  };\n\n  const handleLogout = () => {\n    onLogout();\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/staff').then((response) => {\n      setStaff(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (selectedStaffId) {\n      axios.get(`http://localhost:5000/api/records/${selectedStaffId}`).then((response) => {\n        setClockInOutRecords(response.data);\n        processWorkTimeRecords(selectedStaffId, response.data, staff);\n      });\n      axios.get(`http://localhost:5000/api/attendance`).then((response) => {\n        const filteredAttendance = response.data.filter((record: AttendanceRecord) => record.staffId === selectedStaffId);\n        setAttendanceRecords(filteredAttendance);\n      });\n    } else {\n      setClockInOutRecords([]);\n      setAttendanceRecords([]);\n      setWorkTimeRecords([]);\n    }\n  }, [selectedStaffId, staff]);\n\n  const handleClockInOutSort = (column: keyof ClockInOutRecord) => {\n    if (clockInOutSortColumn === column) {\n      setClockInOutSortDirection(clockInOutSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setClockInOutSortColumn(column);\n      setClockInOutSortDirection('asc');\n    }\n  };\n\n  const handleAttendanceSort = (column: keyof AttendanceRecord) => {\n    if (attendanceSortColumn === column) {\n      setAttendanceSortDirection(attendanceSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setAttendanceSortColumn(column);\n      setAttendanceSortDirection('asc');\n    }\n  };\n\n  const processWorkTimeRecords = (staffId: string, records: ClockInOutRecord[], allStaff: Staff[]) => {\n    const dailyRecords: { [key: string]: ClockInOutRecord[] } = {};\n    records.forEach(record => {\n      const date = new Date(record.timestamp).toISOString().slice(0, 10);\n      if (!dailyRecords[date]) {\n        dailyRecords[date] = [];\n      }\n      dailyRecords[date].push(record);\n    });\n\n    const processedRecords: WorkTimeRecord[] = [];\n    for (const date in dailyRecords) {\n      const recordsForDate = dailyRecords[date].sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n      const clockIn = recordsForDate.find(r => r.type === 'clock-in');\n      const clockOut = recordsForDate.reverse().find(r => r.type === 'clock-out');\n\n      let totalHours = 'N/A';\n      if (clockIn && clockOut) {\n        const startTime = new Date(clockIn.timestamp).getTime();\n        const endTime = new Date(clockOut.timestamp).getTime();\n        const diffMillis = endTime - startTime;\n\n        const hours = Math.floor(diffMillis / (1000 * 60 * 60));\n        const minutes = Math.floor((diffMillis % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor(((diffMillis % (1000 * 60 * 60)) % (1000 * 60)) / 1000);\n\n        totalHours = `${hours} jam ${minutes} menit ${seconds} detik`;\n      } else if (clockIn) {\n        totalHours = 'Sedang Bekerja';\n      }\n\n      if (clockIn || clockOut) {\n        let keterangan = '';\n        if (clockIn) {\n          const clockInDate = new Date(clockIn.timestamp);\n          const sevenAM = new Date(clockInDate);\n          sevenAM.setHours(7, 0, 0, 0);\n\n          if (clockInDate.getTime() < sevenAM.getTime()) {\n            keterangan = 'Datang Lebih Awal';\n          } else if (clockInDate.getHours() === 7 && clockInDate.getMinutes() === 0 && clockInDate.getSeconds() === 0) {\n            keterangan = 'Tepat Waktu';\n          } else {\n            keterangan = 'Terlambat';\n          }\n        }\n\n        processedRecords.push({\n          _id: clockIn ? clockIn._id : '',\n          staffId: staffId,\n          name: allStaff.find(s => s._id === staffId)?.name || 'Unknown',\n          date: date,\n          clockInTime: clockIn ? new Date(clockIn.timestamp).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'N/A',\n          clockOutTime: clockOut ? new Date(clockOut.timestamp).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false }) : 'N/A',\n          totalHours: totalHours,\n          keterangan: keterangan,\n        });\n      }\n    }\n    setWorkTimeRecords(processedRecords);\n  };\n\n  const sortedAttendanceRecords = [...attendanceRecords]\n    .filter((a) =>\n      a.date.toLowerCase().includes(attendanceSearchTerm.toLowerCase()) ||\n      a.status.toLowerCase().includes(attendanceSearchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      if (attendanceSortColumn === null) return 0;\n\n      const aValue = a[attendanceSortColumn];\n      const bValue = b[attendanceSortColumn];\n\n      return attendanceSortDirection === 'asc' ? String(aValue).localeCompare(String(bValue)) : String(bValue).localeCompare(String(aValue));\n    });\n\n  const handleWorkTimeSort = (column: keyof WorkTimeRecord) => {\n    if (workTimeSortColumn === column) {\n      setWorkTimeSortDirection(workTimeSortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setWorkTimeSortColumn(column);\n      setWorkTimeSortDirection('asc');\n    }\n  };\n\n  const sortedWorkTimeRecords = [...workTimeRecords]\n    .filter((r) =>\n      r.name.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.date.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.clockInTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.clockOutTime.toLowerCase().includes(workTimeSearchTerm.toLowerCase()) ||\n      r.totalHours.toLowerCase().includes(workTimeSearchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      if (workTimeSortColumn === null) return 0;\n\n      const aValue = a[workTimeSortColumn];\n      const bValue = b[workTimeSortColumn];\n\n      if (typeof aValue === 'string' && typeof bValue === 'string') {\n        return workTimeSortDirection === 'asc' ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n      } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n        return workTimeSortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n      return 0;\n    });\n\n  const staffOptions = staff.map(s => ({ value: s._id, label: s.name }));\n\n  return (\n    <div>\n      <button className=\"btn btn-danger mb-3\" onClick={handleLogout}>Logout</button>\n      <h1>Admin Dashboard</h1>\n      <div className=\"d-flex align-items-center mb-3\">\n        <button className=\"btn btn-success me-2\" onClick={handleExport}>Export to Excel</button>\n        <select className=\"form-select me-2\" style={{ width: '130px' }} value={selectedExportMonth} onChange={(e) => setSelectedExportMonth(parseInt(e.target.value))}>\n          <option value={-1}>Semua Bulan</option>\n          {['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'].map((month, index) => (\n            <option key={index} value={index}>{month}</option>\n          ))}\n        </select>\n        <select className=\"form-select\" style={{ width: '145px' }} value={selectedExportYear} onChange={(e) => setSelectedExportYear(parseInt(e.target.value))}>\n          <option value={-1}>Semua Tahun</option>\n          {Array.from(new Set(attendanceRecords.map(a => new Date(a.date).getFullYear()))).map(year => (\n            <option key={year} value={year}>{year}</option>\n          ))}\n        </select>\n      </div>\n\n      <h2 className=\"mt-5\">Riwayat Absensi Staff dan Guru</h2>\n      <div className=\"mb-3\">\n        <label htmlFor=\"staff-select\" className=\"form-label\">Select Staff:</label>\n        <Select\n          id=\"staff-select\"\n          options={staffOptions}\n          value={staffOptions.find(option => option.value === selectedStaffId)}\n          onChange={(selectedOption) => setSelectedStaffId(selectedOption ? selectedOption.value : null)}\n          isClearable\n          isSearchable\n          placeholder=\"-- Select or search for a Staff --\"\n        />\n      </div>\n\n      {selectedStaffId && (\n        <>\n          <h2 className=\"mt-5\">Riwayat Kehadiran</h2>\n          <div className=\"mb-3 mt-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Cari riwayat kehadiran...\"\n              value={attendanceSearchTerm}\n              onChange={(e) => setAttendanceSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th onClick={() => handleAttendanceSort('name')} style={{ cursor: 'pointer' }}>\n                    Nama {attendanceSortColumn === 'name' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleAttendanceSort('status')} style={{ cursor: 'pointer' }}>\n                    Status {attendanceSortColumn === 'status' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleAttendanceSort('date')} style={{ cursor: 'pointer' }}>\n                    Tanggal {attendanceSortColumn === 'date' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleAttendanceSort('time')} style={{ cursor: 'pointer' }}>\n                    Waktu {attendanceSortColumn === 'time' && (attendanceSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedAttendanceRecords.map((a) => (\n                  <tr key={a._id}>\n                    <td>{a.name}</td>\n                    <td>{a.status}</td>\n                    <td>{a.date}</td>\n                    <td>{a.time}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <h2 className=\"mt-5\">Riwayat Waktu Kerja</h2>\n          <div className=\"mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Cari riwayat waktu kerja...\"\n              value={workTimeSearchTerm}\n              onChange={(e) => setWorkTimeSearchTerm(e.target.value)}\n            />\n          </div>\n          <div className=\"table-responsive\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th onClick={() => handleWorkTimeSort('name')} style={{ cursor: 'pointer' }}>\n                    Nama {workTimeSortColumn === 'name' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('date')} style={{ cursor: 'pointer' }}>\n                    Tanggal {workTimeSortColumn === 'date' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('clockInTime')} style={{ cursor: 'pointer' }}>\n                    Jam Masuk {workTimeSortColumn === 'clockInTime' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('clockOutTime')} style={{ cursor: 'pointer' }}>\n                    Jam Pulang {workTimeSortColumn === 'clockOutTime' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('totalHours')} style={{ cursor: 'pointer' }}>\n                    Total Jam Kerja {workTimeSortColumn === 'totalHours' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                  <th onClick={() => handleWorkTimeSort('keterangan')} style={{ cursor: 'pointer' }}>\n                    Keterangan {workTimeSortColumn === 'keterangan' && (workTimeSortDirection === 'asc' ? '▲' : '▼')}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedWorkTimeRecords.map((record) => (\n                  <tr key={record._id}>\n                    <td>{record.name}</td>\n                    <td>{record.date}</td>\n                    <td>{record.clockInTime}</td>\n                    <td>{record.clockOutTime}</td>\n                    <td>{record.totalHours}</td>\n                    <td>{record.keterangan}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n      {!selectedStaffId && <p>Please select a staff member to view their attendance records.</p>}\n    </div>\n  );\n};\n\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}