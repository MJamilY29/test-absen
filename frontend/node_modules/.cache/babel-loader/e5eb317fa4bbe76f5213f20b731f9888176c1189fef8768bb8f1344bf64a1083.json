{"ast":null,"code":"import{useEffect}from'react';import{useNavigate}from'react-router-dom';const AuthRedirect=_ref=>{let{user}=_ref;const navigate=useNavigate();useEffect(()=>{if(user){if(user.role==='admin'){navigate('/admin');}else{navigate('/');}}else{navigate('/login');}},[user,navigate]);return null;// This component doesn't render anything, it just handles redirection\n};export default AuthRedirect;","map":{"version":3,"names":["useEffect","useNavigate","AuthRedirect","_ref","user","navigate","role"],"sources":["C:/Users/mjamily/Documents/testing absensi/frontend/src/AuthRedirect.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface User {\n  id: string;\n  username: string;\n  role: 'admin' | 'staff';\n  staffId?: string;\n}\n\ninterface AuthRedirectProps {\n  user: User | null;\n}\n\nconst AuthRedirect: React.FC<AuthRedirectProps> = ({ user }) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user) {\n      if (user.role === 'admin') {\n        navigate('/admin');\n      } else {\n        navigate('/');\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n\n  return null; // This component doesn't render anything, it just handles redirection\n};\n\nexport default AuthRedirect;\n"],"mappings":"AAAA,OAAgBA,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,KAAQ,kBAAkB,CAa9C,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACzD,KAAM,CAAAE,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,GAAII,IAAI,CAAE,CACR,GAAIA,IAAI,CAACE,IAAI,GAAK,OAAO,CAAE,CACzBD,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,IAAM,CACLA,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,IAAM,CACLA,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAAE,CAACD,IAAI,CAAEC,QAAQ,CAAC,CAAC,CAEpB,MAAO,KAAI,CAAE;AACf,CAAC,CAED,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}